.button {
    display: flex;
    align-items: right;
    justify-content: right;
    gap: 20px;
  }
  .boxNew {
    //display: flex;
    padding-left: 10px; 
    gap:10px;
    flex-direction: row;
    width: 70%;
  }
  .boxNew> * {
    flex: 1 none none;
    
  }

  .header{
    padding-left: 10px;
    //padding-bottom: 20px;
    padding-top: 10px;
  }

  ::ng-deep #form-container {
    margin: 10px;
  }
  
   
  .wrapper{
    padding: 10px;
    
  }
  
  ::ng-deep .long-title h3 {
    font-family: 'Segoe UI Light', 'Helvetica Neue Light', 'Segoe UI', 'Helvetica Neue', 'Trebuchet MS', Verdana;
    font-weight: 200;
    font-size: 28px;
    text-align: center;
    margin-bottom: 20px;
  }
  
  .readonly-input {
    pointer-events: none;
    background-color: hsl(0, 19%, 93%);
    color: #333; /* Adjust styles as needed */
  }
  .table-container {
    max-width: 1000px; /* Set the maximum width of the container */
    margin: 10px; /* Center the container horizontally */
  }
  
  .mat-table {
    width: 100%; /* Set the width of the table to 100% of its container */
  }

  .scrollable-textarea {
    overflow: auto;
    resize: vertical; /* Optional: Allow vertical resizing */
    min-height: 100px; /* Optional: Set a minimum height */
  }
 
::ng-deep .mat-dialog-content.error-message {
  color: red; /* Set the color for error messages */
  /* Add any other styling for error messages as needed */
}

::ng-deep .mat-dialog-content.success-message {
  color: green; /* Set the color for success messages */
  /* Add any other styling for success messages as needed */
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}
select {
  display: block;
  width: 100%; /* Adjust the width as needed */
  padding: 8px; /* Adjust the padding as needed */
  margin: 10px 0; /* Adjust the margin as needed */
  box-sizing: border-box;
  border: 1px solid #ccc; /* Adjust the border style as needed */
  border-radius: 4px; /* Adjust the border-radius as needed */
  font-size: 14px; /* Adjust the font size as needed */
  color: #333; /* Adjust the text color as needed */
  background-color: #fff; /* Adjust the background color as needed */
}

/* Optional: Add styles for hover and focus states */
select:hover,
select:focus {
  border-color: #66afe9; /* Adjust the border color for hover and focus states as needed */
}

@media only screen and (max-width: 600px) {
  .sidebar {
   overflow: auto;
  }
}


$space: 1rem;

.table {
    width: 100%;
    margin-top: 25px;
  }
  .button {
    display: flex;
    align-items: right;
    justify-content: right;
    gap: 20px;
  }
  .buttonModified {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 20px;
  }
  
  .body {
    padding: 30px;
    padding-top: 20px;
  }
  .h1 {
    font-size: revert;
    font-weight: 500;
  }
  
  .img {
    height: 20px;
    cursor: pointer;
  }
  
  ::ng-deep {
    .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {
      background-color: #37d111 !important;
    }
    .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {
      background-color: #d9d9d9 !important;
    }
    // .mat-select-arrow-wrapper{
    //   margin-right: 30px !important;
    // }
  
    mat-header-cell,
    mat-cell {
      justify-content: center;
    }
    .mat-slide-toggle {
      margin-left: 10px;
    }
  }
  .filter-input {
    width: 98%;
    padding: 8px 12px;
    border-radius: 4px;
    border: 1px solid #ccc;
    margin-top: 20px;
    font-size: 16px;
  }
  
  .gray-text {
    color: #b9b9b9;
  }

  .boxNew {
    display: flex;
    padding-left: 30px;
    gap:0px;
    flex-direction: row;
    width: 60%;
  }
  .boxNew> * {
    flex: 1 1 160px;
    
  }




  .table {
    width: 100%;
    margin-top: 25px;
  }
  .button {
    display: flex;
    align-items: right;
    justify-content: right;
    gap: 20px;
  }
  
  .checkboxBorder{
    border-style: solid ;
    border-width: 2px;
    border-color: gray;  
    
  }
  
  .body {
    padding: 30px;
    padding-top: 20px;
  }
  .h1 {
    font-size: revert;
    font-weight: 500;
  }
  
  .img {
    height: 20px;
    cursor: pointer;
  }
  
  ::ng-deep {
    .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {
      background-color: #37d111 !important;
    }
    .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {
      background-color: #d9d9d9 !important;
    }
    // .mat-select-arrow-wrapper{
    //   margin-right: 30px !important;
    // }
  
    mat-header-cell,
    mat-cell {
      justify-content: center;
    }
    .mat-slide-toggle {
      margin-left: 10px;
    }
  }
  .filter-input {
    width: 98%;
    padding: 8px 12px;
    border-radius: 4px;
    border: 1px solid #ccc;
    margin-top: 20px;
    font-size: 16px;
  }
  
  .gray-text {
    color: #b9b9b9;
  }

  /* Add this CSS in your component's style file or your global styles */

.mat-radio-button {
  margin-right: 100px; /* Adjust the margin between radio buttons */
}

/* Style the radio button label text */
.mat-radio-button-label {
  font-size: 23px; /* Adjust the font size */
}

/* Style the radio button when it is checked */
.mat-radio-checked .mat-radio-inner-circle {
  background-color: #2196F3; /* Change the background color when checked */
  border-color: #2196F3; /* Change the border color when checked */
}

/* Style the radio button label text when it is checked */
.mat-radio-checked .mat-radio-label-content {
  color: #2196F3; /* Change the text color when checked */
}
.exitbutton {
  margin-left: 30px;
  display: block;
  width: 20%;
  font-family: inherit;
 background: linear-gradient(119.62deg,#000046,rgba(224, 35, 28, 0.725));
  color: #fff;
  border: 0;
  border-radius: $space * 0.25;
  padding: ($space * 0.75) $space;
  cursor: pointer;
  font-weight: 500;
  letter-spacing: inherit;
  margin-bottom: $space * 0.5;
  margin-top: $space * 2;

  &:hover,
  &:focus {
    background-color: #6a6a6a;
  }
  
}
.custom-table {
  width: 100%;
  border-collapse: collapse;
  border: 1px solid #ddd; /* Border color */
}

/* Style for the header row */
.header-row {
  background-color: #f2f2f2; /* Header row background color */
}

/* Style for the data rows */
.data-row {
  border-bottom: 1px solid #ddd; /* Border between rows */
}

/* Style for cells */
.mat-cell {
  padding: 8px; /* Adjust cell padding */
}

/* Optional: Style for sticky header */
.mat-header-cell.sticky {
  background-color: #fff; /* Sticky header background color */
  border-bottom: 1px solid #ddd; /* Border below sticky header */
}
.Custom_button {
  margin-left: 10px;
  display: block;
  width: 15%;
  font-family: inherit;
 background: linear-gradient(119.62deg,#000046,rgba(28, 224, 204, 0.725));
  color: #fff;
  border: 0;
  border-radius: $space * 0.25;
  padding: ($space * 0.75) $space;
  cursor: pointer;
  font-weight: 500;
  letter-spacing: inherit;
  margin-bottom: $space * 0.5;
  margin-top: $space * 2;

  &:hover,
  &:focus {
    background-color: #6a6a6a;
  }
}
.Custom_button::before {
  content: "\002B"; /* Unicode for the plus symbol */
  margin-left: 5px; /* Adjust the margin as needed */
}

.container {
  background-color: #f0f0f0;
  padding: 10px;
  margin: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.view-button {
  background-color: #3498db;
  color: #fff;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.view-grid-button {
  background-color: #27ae60;
  color: #fff;
  padding: 6px 12px;
  border: none;
  border-radius: 3px;
  cursor: pointer;
}
/* Your component CSS */
.popup-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5); /* Adjust the transparency as needed */
  backdrop-filter: blur(5px); /* Adjust the blur intensity as needed */
  z-index: 1;
}

.popup {
  z-index: 2;
  background-color: #fff;
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  text-align: start;
  position: relative;
  max-width: 80%; /* Set a maximum width for the popup */
  margin: auto; /* Center horizontally */
}

.popup-button {
  margin-top: 10px; /* Adjust the distance between button and content */
  padding: 10px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  width: inherit;
  cursor: pointer;
  position: inherit;
  bottom: 10px; /* Adjust the distance from the bottom */
  left: 50%;
  transform: translateX(-50%);
  z-index: 3; /* Place the button above the content */
}

/* Hide the grid filter symbols */
.dx-datagrid-filter-row {
  display: none;
}
.popup-content {
  margin-bottom: 10px; /* Adjust the gap between <strong> and <button> */
}





